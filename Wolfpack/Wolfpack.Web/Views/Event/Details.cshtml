@model Wolfpack.Web.Models.Event.EventVM

@{
    ViewBag.Title = "Details";
}

@if (Request.Params["state"] == "success")
{
    <div class="alert">Succes!</div>
}

@if (Request.Params["state"] == "No user")
{
    <div class="alert error">No user found!</div>
}
    <a class="action-button" href="@Url.Action("RateTeamMembers", new { id =  Model.Id })"><i class="fas fa-arrow-circle-left fa-lg icon-left"></i><span>Rate your team</span></a>
<a class="action-button" href="@Url.Action("Index")"><i class="fas fa-arrow-circle-left fa-lg icon-left"></i><span>Back</span></a>
@if (Model.IsEventCreator)
{
    <button id="generateTeams" class="action-button"><span>Generate teams</span><i class="fas fa-plus fa-lg"></i></button>
}
<div class="info-box" id="info-box">
    <h2>@Html.DisplayFor(model => model.EventName)</h2>

    @if (Model.IsEventCreator)
    {
        <h3>Skills in this event</h3><button class="action-button" id="addSkill"><span>Add new</span><i class="fas fa-plus fa-lg"></i> </button>
    }
    <ul>
        @foreach (var Skill in Model.Skills)
        {
            <li>@Skill.Name</li>
        }
    </ul>

    <h3>Teams in event</h3>
    <div class="overview">
        @foreach (var Team in Model.Teams)
        {
                <div class="overview-item item-large">
                <div class="overview-header">
                    <h3>@Team.Name</h3>
                </div>

                <div class="overview-text">
                    <h4>Team members:</h4>
                    @foreach (var User in Team.Users)
                    {
                        <ul>
                            <li class="team-members">@User.UserName</li>
                        </ul>
                    }            
                    @Html.ActionLink("View team", "Team", new { id = Team.Id }, new { @class = "action-button" })
                </div>
                @if (Model.IsEventCreator)
                {
                    <div>
                        @Html.ActionLink("Rename", "RenameTeamModal", new { id = Team.Id }, new { @class = "action-button" })
                    </div>
                }
            </div>

        }
    </div>
</div>
<script>
    function removeAlert() {
        document.querySelector(".alert").remove();
    }
    window.setTimeout(removeAlert, 8000);
    document.querySelector("#generateTeams").addEventListener("click", function () {
        getPartial('@Url.Action("GenerateTeamsModal")', JSON.stringify({ id: @Model.Id}));
    });
</script>