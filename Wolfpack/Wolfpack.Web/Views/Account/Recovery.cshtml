@model Wolfpack.Web.Models.Account.RecoveryVM

@using Wolfpack.Web.Helpers.Enums

@{
    ViewBag.Title = "Recovery";
    ViewBag.Status = Request["Status"];
}

@if (Model == null)
{
    <text>
        <h2>Recovery</h2>
        <p>Please fill in an email below to recover your password.</p>
    </text>

    using (Html.BeginForm("RecoveryNew", "Account", FormMethod.Post))
    {
        <text>
            <table>
                <tr>
                    <td>@Html.Label("Email")</td>
                    <td>@Html.EditorFor(m => m.Email)</td>
                    <td>@Html.ValidationMessageFor(m => m.Email)</td>
                </tr>
                <tr>
                    <td></td>
                    <td><input type="submit" /></td>
                    <td></td>
                </tr>
            </table>
        </text>
    }
}
else if (Model.Status != null)
{
    switch (Model.Status)
    {
        case RecoveryStatus.Sent:
            <text>
                <h3>If your email is linked to an account on our services, an email will be sent.</h3>
            </text>
            break;
        case RecoveryStatus.Changed:
            <text>
                <h3>Your password has been changed.</h3>
                <p><a href="@Url.Action("Login", "Account")">Click here to go to the login page</a></p>
            </text>
            break;
        case RecoveryStatus.Failed:
            <text>
                <h3>Something went wrong.</h3>
            </text>
            break;
        case RecoveryStatus.Invalid:
            <text>
                <h3>Invalid key</h3>
                <p>The key is either invalid or has expired.</p>
                <p>You can try again by going to this link: <p><a href="@Url.Action("Recovery", "Account")">Reset password</a></p></p>
            </text>
            break;
        default:

            break;
    }
}
else
{
    using (Html.BeginForm("RecoveryForm", "Account", FormMethod.Post))
    {
        <text>
            <table>
                <tr>
                    <td>@Html.Label("Password")</td>
                    <td>@Html.EditorFor(m => m.Password)</td>
                    <td>@Html.ValidationMessageFor(m => m.Password)</td>
                </tr>
                <tr>
                    <td>@Html.Label("Confirm password")</td>
                    <td>@Html.EditorFor(m => m.PasswordCheck)</td>
                    <td>@Html.ValidationMessageFor(m => m.PasswordCheck)</td>
                </tr>
                <tr>
                    <td></td>
                    <td><input type="submit" value="Submit" /></td>
                    <td></td>
                </tr>
            </table>
        </text>
        @Html.HiddenFor(m => m.Key)
    }
}


